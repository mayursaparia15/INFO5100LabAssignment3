/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.DoctorRole;

import java.util.Iterator;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.DoctorDirectory;
import model.EncounterHistory;
import model.Hospital;
import model.HospitalDirectory;
import model.PatientDirectory;
import model.Visit;

/**
 *
 * @author Com
 */
public class AddVitalsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private PatientDirectory patientDirectory;
    private EncounterHistory encounterHistory;
    private DoctorDirectory doctorDirectory;
    private HospitalDirectory hospitalDirectory;
    private String doctorName;
    private int visitId;
    private int patientId;
    private String hospitalName;
    private String city;
    

    public AddVitalsJPanel(JPanel userProcessContainer, PatientDirectory patientDirectory,EncounterHistory encounterHistory,DoctorDirectory doctorDirectory,HospitalDirectory hospitalDirectory, String name) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patientDirectory = patientDirectory;
        this.encounterHistory = encounterHistory;
        this.doctorDirectory = doctorDirectory;
        this.hospitalDirectory = hospitalDirectory;
        this.doctorName = name;
        //commit
        
         
        lblName.setText(name);
        cmbPatient.removeAllItems();
        int i = 0;
        
        JComboBox list = new JComboBox();
        list.addItem("aaaaaaaa");
        for (Visit v : encounterHistory.getEncounterHistory()) {
            
            if(v.getDoctorName().equals(doctorName))
            {
                if(!list.getItemAt(i).equals(v.getPatientName()))
                {
                    cmbPatient.addItem(v.getPatientName());
                    list.addItem(v.getPatientName());
                    i++;
                }
                 
            }
           
        }
        
        
        
        cmbApp.removeAllItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        lblWelcome = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnFindA = new javax.swing.JButton();
        cmbPatient = new javax.swing.JComboBox<>();
        cmbApp = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtbp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txttemp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtpr = new javax.swing.JTextField();

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblName.setText("<<Doctor Name>>");

        lblWelcome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblWelcome.setText("Welcome,");

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Add Vitals");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel7.setText("Patient Name:");

        btnFindA.setText("Find Appointments");
        btnFindA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindAActionPerformed(evt);
            }
        });

        cmbPatient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPatient.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPatientItemStateChanged(evt);
            }
        });
        cmbPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPatientActionPerformed(evt);
            }
        });

        cmbApp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbApp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAppItemStateChanged(evt);
            }
        });
        cmbApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAppActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Vitals ");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("Blood Pressure:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel4.setText("Select Appointment Date:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("Temperature:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText(" Pulse Rate:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(cmbApp, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(cmbPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(108, 108, 108)
                                    .addComponent(btnAdd))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(txttemp, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtbp, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtpr, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFindA)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblTitle)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcome)
                    .addComponent(lblName))
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbApp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttemp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtbp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpr, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAdd)
                .addContainerGap(170, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindAActionPerformed
        // TODO add your handling code here:
        cmbApp.removeAllItems();
        String selected = cmbPatient.getSelectedItem().toString();
        for (Visit v : encounterHistory.getEncounterHistory()) {
            if(v.getPatientName().equals(selected))
            {
                cmbApp.addItem(v.getAppointmentDate());
            }
        }
    }//GEN-LAST:event_btnFindAActionPerformed

    private void cmbPatientItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPatientItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPatientItemStateChanged

    private void cmbPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPatientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPatientActionPerformed

    private void cmbAppItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAppItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAppItemStateChanged

    private void cmbAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAppActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAppActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        
        String selected = cmbApp.getSelectedItem().toString();
        for (Visit v : encounterHistory.getEncounterHistory()) {
            if(v.getAppointmentDate().equals(selected))
            {
                visitId = v.getVisitId();
                patientId = v.getPatientId();
                hospitalName = v.getHospitalName();
                city = v.getCity();
                encounterHistory.DeleteHistory(v);
                
            }
        }
        


//        Iterator<Visit> iter = encounterHistory.getEncounterHistory().iterator();
//
//            while (iter.hasNext()) {
//                Visit v = iter.next();
//
//                if (v.getAppointmentDate().equals(selected))
//                {
//                    visitId = v.getVisitId();
//                    patientId = v.getPatientId();
//                    hospitalName = v.getHospitalName();
//                    city = v.getCity();
//                    encounterHistory.DeleteHistory(v);
//                }
//            }
        Visit v = new Visit();
        v.setVisitId(visitId);
        v.setPatientId(patientId);
        v.setPatientName(cmbPatient.getSelectedItem().toString());
        v.setCity(city);
        v.setHospitalName(hospitalName);
        v.setDoctorName(doctorName);
        v.setTemperature(Integer.parseInt(txttemp.getText()));
        v.setBloodpressure(Integer.parseInt(txtbp.getText()));
        v.setPulserate(Integer.parseInt(txtpr.getText()));
        v.setAppointmentDate(cmbApp.getSelectedItem().toString());

        int i = encounterHistory.addHistory(v);
        if(i==1){
            JOptionPane.showMessageDialog(null, "Vitals Added Successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnFindA;
    private javax.swing.JComboBox<String> cmbApp;
    private javax.swing.JComboBox<String> cmbPatient;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JTextField txtbp;
    private javax.swing.JTextField txtpr;
    private javax.swing.JTextField txttemp;
    // End of variables declaration//GEN-END:variables
}
