/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.SystemAdmin;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.DoctorDirectory;
import model.Hospital;
import model.HospitalDirectory;
import model.Patient;
import model.PatientDirectory;

/**
 *
 * @author Com
 */
public class ModifyPersonsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private HospitalDirectory hospitalDirectory;
    private DoctorDirectory doctorDirectory;
    private PatientDirectory patientDirectory;
    /**
     * Creates new form ModifyHospitals
     */
    public ModifyPersonsJPanel(JPanel userProcessContainer,PatientDirectory patientDirectory) {
        this.userProcessContainer = userProcessContainer;
        this.patientDirectory = patientDirectory;
        initComponents();
        populateTable();
    }
    
    private void populateTable() {
    
        DefaultTableModel  model = (DefaultTableModel) tblPersons.getModel();
        model.setRowCount(0);
        
        for(Patient p : patientDirectory.getPatientDirectory()){
            
            Object[] row = new Object[3];
            row[0] = p;
            row[1] = p.getPatientId();
            row[2] = p.getPhone();
            
            model.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersons = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel4.setText("Email:");

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Modify Person ");

        tblPersons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Phone"
            }
        ));
        jScrollPane1.setViewportView(tblPersons);

        btnUpdate.setText("Update Person");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnView.setText("View Person");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Person");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Person");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("        ID:");

        txtId.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("Phone:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText(" Name:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("Address:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 201, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(18, 18, 18)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnView)
                    .addComponent(btnDelete))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPersons.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to Update Person Details");
            return;
        }
        DefaultTableModel  model = (DefaultTableModel) tblPersons.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);
        if(tblPersons.getSelectedRowCount()==1){

            try
            {
                String name = txtName.getText();
                int PatientID = Integer.parseInt(txtId.getText());
                long phone = Long.parseLong(txtPhone.getText());
                String email = txtEmail.getText();
                String address = txtAddress.getText();

                int status = 1;
                //validations
                //            if(name.equals(""))
                //            {
                    //                JOptionPane.showMessageDialog(this, "Name is Mandatory");
                    //                status = 0;
                    //            }
                //            if(employeeID == 0 || String.valueOf(employeeID).equals(""))
                //            {
                    //                JOptionPane.showMessageDialog(this, "Employee ID can't be zero");
                    //                status = 0;
                    //            }
                //            if(age <= 18 || String.valueOf(age).equals(""))
                //            {
                    //                JOptionPane.showMessageDialog(this, "Age should be greater then 18");
                    //                status = 0;
                    //            }
                //            if(!gender.equals("Male") && !gender.equals("Female") && !gender.equals("male") && !gender.equals("female"))
                //            {
                    //                JOptionPane.showMessageDialog(this, "Invalid Gender");
                    //                status = 0;
                    //            }
                //            if(startDate == null)
                //            {
                    //                JOptionPane.showMessageDialog(this, "Start Date is Mandatory");
                    //                status = 0;
                    //            }
                //            if(level.equals(""))
                //            {
                    //                JOptionPane.showMessageDialog(this, "Level is Mandatory");
                    //                status = 0;
                    //            }
                //            if(teamInfo.equals(""))
                //            {
                    //                JOptionPane.showMessageDialog(this, "Team Information is Mandatory");
                    //                status = 0;
                    //            }
                //            if(title.equals(""))
                //            {
                    //                JOptionPane.showMessageDialog(this, "Title is Mandatory");
                    //                status = 0;
                    //            }
                //            String regexNum = "\\d{10}";
                //            Pattern patternNum = Pattern.compile(regexNum);
                //            Matcher matcherNum = patternNum.matcher(String.valueOf(number));
                //            if(!matcherNum.matches())
                //            {
                    //                JOptionPane.showMessageDialog(this, "Invalid number");
                    //                status = 0;
                    //            }
                //            String regex = "^(.+)@(.+)$";
                //            Pattern pattern = Pattern.compile(regex);
                //            Matcher matcher = pattern.matcher(email);
                //            if(email.equals("") || !matcher.matches())
                //            {
                    //                JOptionPane.showMessageDialog(this, "Invalid Email ID");
                    //                status = 0;
                    //            }
                if(status == 1)
                {
                    selectedPatient.setPatientName(name);
                    selectedPatient.setPatientId(PatientID);
                    selectedPatient.setPhone(phone);
                    selectedPatient.setEmail(email);
                    selectedPatient.setAddress(address);

                    //update value
                    model.setValueAt(name, tblPersons.getSelectedRow(), 0);
                    model.setValueAt(PatientID, tblPersons.getSelectedRow(), 1);
                    model.setValueAt(phone, tblPersons.getSelectedRow(), 2);

                    JOptionPane.showMessageDialog(this, "Updated Successfully!!");

                    populateTable();

                    txtName.setText("");
                    txtId.setText("");
                    txtPhone.setText("");
                    txtEmail.setText("");
                    txtAddress.setText("");

                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, "Please Click on View before Update!!");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPersons.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to View Person");
            return;
        }

        DefaultTableModel  model = (DefaultTableModel) tblPersons.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);

        txtName.setText(selectedPatient.getPatientName());
        txtId.setText(String.valueOf(selectedPatient.getPatientId()));
        txtPhone.setText(String.valueOf(selectedPatient.getPhone()));
        txtEmail.setText(selectedPatient.getEmail());
        txtAddress.setText(selectedPatient.getAddress());
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        AddPersonJPanel apjp = new AddPersonJPanel(userProcessContainer,patientDirectory);
        userProcessContainer.add("AddPersonJPanel",apjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPersons.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to Remove Person");
            return;
        }

        DefaultTableModel  model = (DefaultTableModel) tblPersons.getModel();
        Patient selectedPatient = (Patient) model.getValueAt(selectedRowIndex, 0);
        patientDirectory.DeletePatient(selectedPatient);

        JOptionPane.showMessageDialog(this, "Hospital Removed!!");
        populateTable();

        txtName.setText("");
        txtId.setText("");
        txtPhone.setText("");
        txtEmail.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblPersons;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
